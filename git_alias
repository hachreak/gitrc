#!/bin/bash

blue='\e[0;34m'
NC='\e[0m' # No Color'

git_branches_status(){
  git for-each-ref --format='%(refname:short)' refs/heads/* | \
    while read b; do
      if r=$(git config --get branch.$b.remote); then
        m=$(git config --get branch.$b.merge)
        count=`git rev-list --left-right $b..$r/${m##*/}|wc -l`
        if [ $count -ne 0 ]; then
          echo -e "${blue}[$count]${NC} $b -> $r/${m##*/}"
        fi
      fi
    done
}

# Track branch -> $remote.branch
# e.g.
#   To track this branch to upstream/foo:
#     git-track upstream foo
#   To track this branch "thisbranch" to upstream/thisbranch
#     git-track upstream
#   To track this branch "thisbranch" to origin/thisbranch
#     git-track
#
git_track(){
  remote=${1:-origin}
  tracking_default=`git symbolic-ref --short HEAD`
  tracking=${2:-$tracking_default}
  # set remote
  git config branch.$tracking.remote $remote
  # set remote branch to track
  git config branch.$tracking.merge refs/heads/$tracking
  echo "tracking $remote/$tracking"
}


alias ga="git add ."
alias gb="git branch -vv"
alias gbm="git branch --merged"
alias gbnm="git branch --no-merged"
alias gbs="git_branches_status"
alias gcck="git checkout"
alias gccb="gcck -b"
alias gcoa="git commit -a -s"
alias gcoaa="gcoa --amend"
alias gk="git ka"
alias gs="git status -bs"
alias gt="git_track"
